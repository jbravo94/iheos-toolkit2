<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>gov.nist.toolkit</groupId>
        <artifactId>tk-deps</artifactId>
        <version>7.12.0-SNAPSHOT</version><!-- xdstk -->
        <relativePath>../tk-deps/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>webui-tests</artifactId>

    <dependencies>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- hk2 is required. Without this, java.lang.IllegalStateException: InjectionManagerFactory not found. exception will occur. -->
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>${jersey.inject.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.bundles.repackaged</groupId>
            <artifactId>jersey-guava</artifactId>
            <version>${jersey.guava.version}</version>   <!--     2.6 -->
        </dependency>

        <dependency>
            <groupId>gov.nist.toolkit</groupId>
            <artifactId>actor-transaction</artifactId>
        </dependency>
        <dependency>
            <groupId>gov.nist.toolkit</groupId>
            <artifactId>toolkit-api</artifactId>
        </dependency>
        <dependency>
            <groupId>gov.nist.toolkit</groupId>
            <artifactId>config-datatypes</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.63.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <!-- mvn verify > NUL can be used to discard known annotation warnings until duplicate jar is fixed. See annotation scan timeout in jetty.xml -->
                    <!-- In case Jetty fails to start, see notes below. -->
                    <!-- Note: HTTP port number must be the same in Toolkit.properties and the jetty-http.xml files. Otherwise, Toolkit will fail to start in Jetty. -->
                    <!-- Note: Clear your External Cache folder. TestLogCache folders and simulators can become obsolete or incompatible with the current code. WebUI-Tests will not function properly with old-format simulators. -->
                    <!-- Note: These tests were only tested in Single user mode. This translates to Toolkit.Properties setting Multiuser_mode=false and Cas_mode=false. -->
                    <!-- Uncomment below to debug individual tests -->
                    <!-- While running these tests, keep an eye on projectdir/webui-tests/target/yyyy_mm_dd.stderrout.log to view server for output,errors, or javascript wait timeout issues. -->
                    <runOrder>alphabetical</runOrder> <!-- alphabetical: This means that all classes in the Include block will be sorted by their Package name + Class name. Thus, all classes exist only in one package so only the Class name part is used for sorting. The moment classes are shifted out of the single-package structure, alphabetical sorting will not work. -->
                    <includes>
                        <!-- SimulatorManager deletes and recreates all simulators. If this is not the first test to run, Simulator logs (Not TestLogCache) created by other tests are gone! You can tell by the created timestamp of the Test run time and Simulator creation time -->
                        <include>**/A1_RunFirst_SimulatorManagerSpec.java</include>
                        <include>**/A2_Run_TestContextSpec.java</include>
                        <include>**/RecipientActorSimulatorSpec.java</include>
                        <include>**/RegistryActorA1SimulatorSpec.java</include>
                        <include>**/RegistryActorA2FindDocumentswInspectResultSpec.java</include>
                        <include>**/RegistryActorA30MetadataUpdateOptionSpec.java</include>
                        <include>**/RegistryActorA31RestrictedMetadataUpdateOptionSpec.java</include>
                        <include>**/RegistryActorA32RemoveMetadataDocumentsOptionSpec.java</include>
                        <include>**/RegistryActorA34OnDemandOptionSpec.java</include>
                        <include>**/RegistryActorA35IntegratedSourceRepOptionSpec.java</include>
                        <include>**/RegistryActorA36XuaOptionSpec.java</include>
                        <include>**/RegistryActorA37CATFolderOptionSpec.java</include>
                        <include>**/RegistryActorA38CATLifecycleOptionSpec.java</include>
                        <include>**/RegistryActorA39MpqOptionSpec.java</include>
                        <include>**/RepositoryActorSimulatorSpec.java</include> <!-- RMD Option Test 50001 has a problem XDSRegistryError : Input did not validate against schema: -->
                        <include>**/RespondingGatewayActorSimulatorSpec.java</include> <!-- requires base64 package for tests -->
                    </includes>
                    <!-- Uncomment below to Run all tests -->
                    <!--<includes>-->
                        <!--<include>**/SimulatorManagerSpec.java</include>-->
                        <!--<include>**/*ActorSimulatorSpec.java</include>-->
                    <!--</includes>-->
                    <!-- We should NOT ignore test failures. TestFailureIgnore should be false. -->
                    <testFailureIgnore>false</testFailureIgnore>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>1.6.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>addTestSources</goal>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mavenCompilerPluginVersion}</version>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                    <compilerArgument>-Xms1024m -Xmx1024m -XX:MaxPermSize=256m --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED	--add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-groovy-test-source</id>
                        <phase>test</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${basedir}/src/test/groovy</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.4.9.v20180320</version>
                <configuration>
                    <!-- Enter any systemProperties here. -->
                    <jettyXml>${basedir}/src/test/etc/jetty.xml,${basedir}/src/test/etc/jetty-http.xml,${basedir}/src/test/etc/jetty-logging.xml</jettyXml>
                    <!-- http, ${basedir}/src/test/etc/jetty-https.xml,${basedir}/src/test/etc/jetty-ssl.xml, logging -->

                    <war>../xdstools2/target/xdstools2-${project.version}</war> <!-- Use exploded-directory name or file.war -->
                    <webApp>
                        <contextPath>/xdstools</contextPath>
                    </webApp>
                    <stopKey>alpha</stopKey>
                    <stopPort>9099</stopPort>
                    <systemProperties>
                        <systemProperty>
                            <name>jetty.logs</name>
                            <value>${basedir}/target</value>
                        </systemProperty>
                        <!-- The following Java Logging system variable does not seem to take effect in Jetty.
                        Need to revisit this logging property configuration in future -->
<!--                        <systemProperty>-->
<!--                            <name>java.util.logging.config.file</name>-->
<!--                            <value>${basedir}/../logging.properties</value>-->
<!--                        </systemProperty>-->
                    </systemProperties>
                </configuration>
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>deploy-war</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
